buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M1'
    }
}

repositories {
    jcenter()
}

ext.junitPlatformVersion = '1.0.0-M1'
ext.junitJupiterVersion  = '5.0.0-M1'
ext.log4JVersion         = '2.5'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'com.github.kt3k.coveralls'

sourceCompatibility = 1.8

dependencies {
    compile 'org.modeshape:modeshape-common:5.+'

    testCompile 'org.mockito:mockito-core:2.+'
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")

    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

compileTestJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

junitPlatform {
    platformVersion "${junitPlatformVersion}"
    engines {
        include 'junit-jupiter'
    }
    includeClassNamePattern '.*Test'
}

afterEvaluate {

    jacoco {
        toolVersion = '0.7.4.201502262128'
        applyTo junitPlatformTest
    }

    task junit5CodeCoverageReport(type:JacocoReport){
        executionData junitPlatformTest
        sourceSets sourceSets.main
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories = files(sourceSets.main.output)
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }

    coveralls {
        sourceDirs = files(sourceSets.main.allSource.srcDirs).flatten()
        jacocoReportPath = "${buildDir}/reports/jacoco/junit5CodeCoverageReport/junit5CodeCoverageReport.xml"
    }

    tasks.coveralls {
        group = 'Coverage reports'
        description = 'Uploads the aggregated coverage report to Coveralls'

        dependsOn junit5CodeCoverageReport
    }

}

mainClassName = 'de.kimminich.kata.botwars.Game'
